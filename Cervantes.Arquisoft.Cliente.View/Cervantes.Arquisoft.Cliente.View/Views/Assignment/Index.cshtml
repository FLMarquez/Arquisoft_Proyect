@model IEnumerable<Cervantes.Arquisoft.View.Models.AssignmentViewModel>

@{
    ViewData["Title"] = "Tareas";
}

<partial name="~/Views/Shared/Partials/_NavbarUser.cshtml" />

<h1>Tareas para el Proyecto </h1>

<h5>Permite administrar las tareas</h5>


<a asp-action="Index" asp-controller="Project" class="btn btn-primary mb-3"><i class="bi bi-box-arrow-in-left"></i> Volver a Projectos</a>

<button class="btn btn-info mb-3" popovertarget="ProgressBarDetailed"><i class="bi bi-file-bar-graph"> </i> Detalle</button>

@{
    var index = 0;

    double totalTasks = Model.Count();
    double startedTasks = Model.Count(a => a.IsStarted && !a.IsCompleted && !a.IsSkipped);
    double completedTasks = Model.Count(a => a.IsCompleted);
    double SkippedTasks = Model.Count(a => a.IsSkipped);
    double onWait = Model.Count(a => !a.IsStarted && !a.IsSkipped && !a.IsCompleted);

    double averageCompletionPercentage = totalTasks > 0 ? Math.Floor((completedTasks / totalTasks * 100)) : 0;
    double averageStartedPercentage = totalTasks > 0 ? Math.Floor((startedTasks / totalTasks * 100)) : 0;
    double averageSkippedPercentage = totalTasks > 0 ? Math.Floor((SkippedTasks / totalTasks * 100)) : 0;
    double averageOnWaitPercentage = onWait > 0 ? Math.Floor((onWait / totalTasks * 100)) : 0;

    double startedPercentage = totalTasks > 0 ? Math.Floor((startedTasks / totalTasks * 100)) : 0;
    double completedPercentage = totalTasks > 0 ? Math.Floor((completedTasks / totalTasks * 100)) : 0;
    double SkippedPercentage = totalTasks > 0 ? Math.Floor((SkippedTasks / totalTasks * 100)) : 0;
    double onWaitPercentage = onWait > 0 ? Math.Floor((onWait / totalTasks * 100)) : 0;
}

<!-- Progress Bar -->
<h5>Progreso</h5>
<div class="border rounded m-3 p-2">


    <ul class="progress-indicator m-1 p-1">
        @foreach (var Assignment in Model)
        {
            if (Assignment.IsCompleted == true && Assignment.IsStarted == true)
            {
                <li class="completed">
                    <span class="bubble"></span>
                    @Assignment.AssignmentName <br><small>Completa</small>
                </li>
            }
            else if (Assignment.IsCompleted == false && Assignment.IsStarted == true && Assignment.IsSkipped == false)
            {
                <li class="active">
                    <span class="bubble"></span>
                    @Assignment.AssignmentName <br><small>Iniciada</small>
                </li>
            }
            else if (Assignment.IsSkipped == true && Assignment.IsCompleted == false && Assignment.IsStarted == true)
            {
                <li class="warning">
                    <span class="bubble"></span>
                    @Assignment.AssignmentName <br><small>Omitida</small>
                </li>
            }
            else
            {
                <li>
                    <span class="bubble"></span>
                    @Assignment.AssignmentName <br><small>En Espera</small>
                </li>
            }
        }
    </ul>
</div>
<!-- Progress Details -->
<div popover id="ProgressBarDetailed" class="container-md">
    <div class="border rounded m-5 p-2">

        <h3 class="h4">Estado de tareas:</h3>

        <p>Completas:</p>
        <div class="progress m-3">
            <div class="progress-bar bg-success progress-bar-striped progress-bar-animated" role="progressbar" style="width: @averageCompletionPercentage%">
                <span class="sr-only">@averageCompletionPercentage%</span>
            </div>
        </div>
        <p>Iniciadas:</p>
        <div class="progress m-3">
            <div class="progress-bar bg-info progress-bar-striped progress-bar-animated" role="progressbar" style="width: @averageStartedPercentage%">
                <span class="sr-only">@averageStartedPercentage%</span>
            </div>
        </div>
        <p>Omitidas:</p>
        <div class="progress m-3">

            <div class="progress-bar bg-warning progress-bar-striped progress-bar-animated" role="progressbar" style="width: @averageSkippedPercentage%">
                <span class="sr-only">@averageSkippedPercentage%</span>
            </div>
        </div>
        <p>En Espera:</p>
        <div class="progress m-3">

            <div class="progress-bar bg-dark progress-bar-striped progress-bar-animated" role="progressbar" style="width: @averageOnWaitPercentage%">
                <span class="sr-only">@averageOnWaitPercentage%</span>
            </div>
        </div>
        <div class="m-5 border-top">
            <strong>Total:</strong>
            <div class="progress m-3">
                <div class="progress-bar bg-body progress-bar-striped progress-bar-animated" role="progressbar" style="width: @onWaitPercentage%">
                    <span class="sr-only">@onWaitPercentage% Es Espera</span>
                </div>
                <div class="progress-bar bg-info progress-bar-striped progress-bar-animated" role="progressbar" style="width: @startedPercentage%">
                    <span class="sr-only">@startedPercentage% Iniciadas</span>
                </div>
                <div class="progress-bar bg-success progress-bar-striped progress-bar-animated" role="progressbar" style="width: @completedPercentage%">
                    <span class="sr-only">@completedPercentage% Completas</span>
                </div>
                <div class="progress-bar bg-warning progress-bar-striped progress-bar-animated" role="progressbar" style="width: @SkippedPercentage%">
                    <span class="sr-only">@SkippedPercentage% Omitidas</span>
                </div>


            </div>
        </div>
    </div>
</div>

<h5>Tareas</h5>
<small>Para iniciar una tarea debe seleccionar una fecha de compromiso posterior al dia de hoy.</small>

@foreach (var Assignment in Model)
{

    <form>
        <!-- Primera Fila -->

        <div class="container row border rounded m-3 p-3 bg-light ">
            <div class="col-5">
                <div class="row">
                    <div class="col-3">
                        Titulo:
                    </div>
                    <div class="col-9">
                        <strong> @Assignment.AssignmentName</strong>
                    </div>
                </div>


                <div class="row">
                    <div class="col-3">
                        Descripción:
                    </div>
                    <div class="col-9">
                        <strong>@Assignment.AssignmentDescription</strong>
                    </div>
                </div>
            </div>

            <div class="col-5">
                @if (Assignment.IsStarted == true)
                {
                    <div class="row mb-1 justify-content-end">

                        <div class="col-auto">

                            Inicio de tarea: <small class="text-muted">@((Assignment.StartedDate != null ? Assignment.StartedDate.Value.ToString("dd-MM-yyyy") : "N/A"))</small>
                        </div>
                        <div class="col-auto">

                            Compromiso Inicial: <small class="text-muted">@((Assignment.StartedDate != null ? Assignment.OriginalDueDate.Value.ToString("dd-MM-yyyy") : "N/A"))</small>
                        </div>
                        <div class="col-auto">
                            Compromiso Actual: <small class="text-muted">@((Assignment.LastDueDate != null ? Assignment.LastDueDate.Value.ToString("dd-MM-yyyy") : (Assignment.StartedDate != null ? Assignment.StartedDate.Value.ToString("dd-MM-yyyy") : "N/A")))</small>
                        </div>

                    </div>
                    <div class="row mb-1 justify-content-end">
                        <div class="col-auto">
                            <input asp-for="@Assignment.IsCompleted" class="form-check-input" type="checkbox" disabled="disabled" checked="@(Assignment.IsCompleted)" id="IsCompleted_@Assignment.AssignmentId" />
                            <label class="form-check-label" for="IsCompleted_@Assignment.AssignmentId">Completa</label>
                        </div>
                        <div class="col-auto">
                            <input asp-for="@Assignment.IsSkipped" class="form-check-input" type="checkbox" disabled="disabled" checked="@(Assignment.IsSkipped)" id="IsSkipped_@Assignment.AssignmentId" />
                            <label class="form-check-label" for="IsSkipped_@Assignment.AssignmentId">Omitida</label>
                        </div>
                        <div class="col-auto">
                            <input asp-for="@Assignment.NotVisible" class="form-check-input" type="checkbox" disabled="disabled" checked="@(Assignment.NotVisible)" id="NotVisible_@Assignment.AssignmentId" />
                            <label class="form-check-label" for="NotVisible_@Assignment.AssignmentId">Oculto</label>
                        </div>
                        <div class="col-auto">
                            <div class="flex-grow-1">
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="assignment-group">
                        <div class="row justify-content-end">
                            <div class="col-sm-auto">
                                <input asp-for="@Assignment.StartedDate" class="form-control mb-3 dueDateInput" type="date" />
                            </div>
                            <div class="col-auto">
                                <a href="#" class="btn btn-info disabled startTaskButton" data-assignment='@Json.Serialize(Assignment)'>Seleccione fecha de compromiso</a>
                            </div>
                        </div>
                    </div>

                }
            </div>

            <div class="col-2 text-end">
                @if (Assignment.IsStarted == true)
                {
                    <a asp-action="Edit" asp-route-id="@Assignment.AssignmentId" class="btn btn-primary"><i class="bi bi-pencil-fill"> </i>Ver</a>
                }
            </div>
        </div>
    </form>







}
@section Scripts {

    <script>
        $(document).ready(function () {
            $(".assignment-group").each(function () {
                var dueDateInput = $(this).find(".dueDateInput");
                var startTaskButton = $(this).find(".startTaskButton");

                dueDateInput.on("change", function () {
                    var currentCommitment = $(this).val();
                    var assignmentData = JSON.parse(startTaskButton.attr("data-assignment"));

                    assignmentData.OriginalDueDate = currentCommitment;

                    startTaskButton.attr("data-assignment", JSON.stringify(assignmentData));

                    if (currentCommitment) {
                        var currentDate = new Date();
                        currentDate.setHours(0, 0, 0, 0)
                        currentDate.setDate(currentDate.getDate() - 1);
                        var selectedDate = new Date(currentCommitment);

                        if (selectedDate >= currentDate) { // Permitir que la fecha seleccionada sea hoy o en el futuro
                            startTaskButton.removeClass("disabled");
                            startTaskButton.text("Iniciar Tarea");
                            startTaskButton.removeClass("btn-info").addClass("btn-success");
                        } else {
                            startTaskButton.addClass("disabled");
                            startTaskButton.text("Seleccione fecha posterior");
                            startTaskButton.removeClass("btn-success").addClass("btn-info");
                        }
                    } else {
                        startTaskButton.addClass("disabled");
                        startTaskButton.text("Seleccione fecha de compromiso");
                        startTaskButton.removeClass("btn-success").addClass("btn-info");
                    }
                }).trigger("change");

                startTaskButton.on("click", function (e) {
                    e.preventDefault();
                    var assignmentData = JSON.parse($(this).attr("data-assignment"));
                    console.log('Datos enviados al servidor:', assignmentData); // Agrega esta línea para ver los datos
                    var url = "/Assignment/Start";

                    fetch(url, {
                        method: "POST",
                        body: JSON.stringify(assignmentData),
                        headers: {
                            'Content-Type': 'application/json',
                        }
                    }).then(response => {
                        return response.json();
                    }).then(data => {
                        window.location.href = data.redirectUrl;
                    }).catch(error => {
                        console.error('Error en la solicitud fetch:', error);
                    });
                });
            });
        });

    </script>

}
