// <auto-generated />
using System;
using Cervantes.Arquisoft.Usuario.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cervantes.Arquisoft.Data.Migrations
{
    [DbContext(typeof(ArquisoftDbContext))]
    [Migration("20240330140836_DeletedReason")]
    partial class DeletedReason
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("AdditionalInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocalityId")
                        .HasColumnType("int");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numbering")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("AddressId");

                    b.HasIndex("LocalityId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            AddressLine = "Boyero",
                            Department = "1",
                            Floor = "1",
                            LocalityId = 3,
                            Neighborhood = "Chateau Carreras",
                            Numbering = 528,
                            PostalCode = "5000",
                            ProvinceId = 5
                        },
                        new
                        {
                            AddressId = 2,
                            AddressLine = "Cerrito",
                            Department = "1",
                            Floor = "1",
                            LocalityId = 3,
                            Neighborhood = "Arguello",
                            Numbering = 173,
                            PostalCode = "5000",
                            ProvinceId = 5
                        },
                        new
                        {
                            AddressId = 3,
                            AddressLine = "Chancay",
                            Department = "1",
                            Floor = "1",
                            LocalityId = 2,
                            Neighborhood = "Observatorio",
                            Numbering = 1401,
                            PostalCode = "5003",
                            ProvinceId = 5
                        },
                        new
                        {
                            AddressId = 4,
                            AddressLine = "San Martín",
                            Department = "1",
                            Floor = "1",
                            LocalityId = 5,
                            Neighborhood = "San Vicente",
                            Numbering = 867,
                            PostalCode = "5000",
                            ProvinceId = 7
                        },
                        new
                        {
                            AddressId = 5,
                            AddressLine = "9 de Julio",
                            Department = "1",
                            Floor = "1",
                            LocalityId = 4,
                            Neighborhood = "San Martín",
                            Numbering = 422,
                            PostalCode = "5010",
                            ProvinceId = 8
                        },
                        new
                        {
                            AddressId = 6,
                            AddressLine = "25 de Mayo",
                            Department = "1",
                            Floor = "1",
                            LocalityId = 3,
                            Neighborhood = "9 de Julio",
                            Numbering = 8,
                            PostalCode = "5800",
                            ProvinceId = 3
                        },
                        new
                        {
                            AddressId = 7,
                            AddressLine = "Rosario",
                            Department = "1",
                            Floor = "1",
                            LocalityId = 4,
                            Neighborhood = "Bella Vista",
                            Numbering = 914,
                            PostalCode = "5125",
                            ProvinceId = 2
                        },
                        new
                        {
                            AddressId = 8,
                            AddressLine = "Colon",
                            Department = "1",
                            Floor = "1",
                            LocalityId = 3,
                            Neighborhood = "Quintana",
                            Numbering = 777,
                            PostalCode = "4052",
                            ProvinceId = 1
                        },
                        new
                        {
                            AddressId = 9,
                            AddressLine = "Salta",
                            Department = "1",
                            Floor = "1",
                            LocalityId = 2,
                            Neighborhood = "Belgrano",
                            Numbering = 1522,
                            PostalCode = "3582",
                            ProvinceId = 1
                        },
                        new
                        {
                            AddressId = 10,
                            AddressLine = "Jujuy",
                            Department = "1",
                            Floor = "1",
                            LocalityId = 1,
                            Neighborhood = "Palermo",
                            Numbering = 4006,
                            PostalCode = "5008",
                            ProvinceId = 9
                        });
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Assignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"));

                    b.Property<string>("AssignmentDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AssignmentTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSkipped")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStarted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("NotVisible")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("OriginalDueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SkippedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AssignmentId");

                    b.HasIndex("AssignmentTypeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.AssignmentType", b =>
                {
                    b.Property<int>("AssignmentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentTypeId"));

                    b.Property<string>("AssignmentTypeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignmentTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("ServiceTypeId")
                        .HasColumnType("int");

                    b.HasKey("AssignmentTypeId");

                    b.HasIndex("ServiceTypeId");

                    b.ToTable("AssignmentsTypes");

                    b.HasData(
                        new
                        {
                            AssignmentTypeId = 1,
                            AssignmentTypeDescription = "Elaboración de planos para Anteproyecto",
                            AssignmentTypeName = "Elaboración de Planos",
                            Order = 1,
                            ServiceTypeId = 1
                        },
                        new
                        {
                            AssignmentTypeId = 2,
                            AssignmentTypeDescription = "Presentación de documentación para Anteproyecto",
                            AssignmentTypeName = "Presentación de Documentación",
                            Order = 2,
                            ServiceTypeId = 1
                        },
                        new
                        {
                            AssignmentTypeId = 3,
                            AssignmentTypeDescription = "Revisión de costos para Anteproyecto",
                            AssignmentTypeName = "Revisión de Costos",
                            Order = 3,
                            ServiceTypeId = 1
                        },
                        new
                        {
                            AssignmentTypeId = 4,
                            AssignmentTypeDescription = "Diseño conceptual para Anteproyecto",
                            AssignmentTypeName = "Diseño Conceptual",
                            Order = 4,
                            ServiceTypeId = 1
                        },
                        new
                        {
                            AssignmentTypeId = 5,
                            AssignmentTypeDescription = "Evaluación ambiental para Anteproyecto",
                            AssignmentTypeName = "Evaluación Ambiental",
                            Order = 5,
                            ServiceTypeId = 1
                        },
                        new
                        {
                            AssignmentTypeId = 6,
                            AssignmentTypeDescription = "Planificación de recursos para Proyecto Sin Detalle",
                            AssignmentTypeName = "Planificación de Recursos",
                            Order = 1,
                            ServiceTypeId = 2
                        },
                        new
                        {
                            AssignmentTypeId = 7,
                            AssignmentTypeDescription = "Diseño preliminar para Proyecto Sin Detalle",
                            AssignmentTypeName = "Diseño Preliminar",
                            Order = 2,
                            ServiceTypeId = 2
                        },
                        new
                        {
                            AssignmentTypeId = 8,
                            AssignmentTypeDescription = "Adquisición de materiales para Proyecto Sin Detalle",
                            AssignmentTypeName = "Adquisición de Materiales",
                            Order = 3,
                            ServiceTypeId = 2
                        },
                        new
                        {
                            AssignmentTypeId = 9,
                            AssignmentTypeDescription = "Supervisión de construcción para Proyecto Sin Detalle",
                            AssignmentTypeName = "Supervisión de Construcción",
                            Order = 4,
                            ServiceTypeId = 2
                        },
                        new
                        {
                            AssignmentTypeId = 10,
                            AssignmentTypeDescription = "Control de calidad para Proyecto Sin Detalle",
                            AssignmentTypeName = "Control de Calidad",
                            Order = 5,
                            ServiceTypeId = 2
                        },
                        new
                        {
                            AssignmentTypeId = 11,
                            AssignmentTypeDescription = "Diseño detallado para Proyecto Con Detalle",
                            AssignmentTypeName = "Diseño Detallado",
                            Order = 1,
                            ServiceTypeId = 3
                        },
                        new
                        {
                            AssignmentTypeId = 12,
                            AssignmentTypeDescription = "Planificación de recursos para Proyecto Con Detalle",
                            AssignmentTypeName = "Planificación de Recursos",
                            Order = 2,
                            ServiceTypeId = 3
                        },
                        new
                        {
                            AssignmentTypeId = 13,
                            AssignmentTypeDescription = "Adquisición de materiales para Proyecto Con Detalle",
                            AssignmentTypeName = "Adquisición de Materiales",
                            Order = 3,
                            ServiceTypeId = 3
                        },
                        new
                        {
                            AssignmentTypeId = 14,
                            AssignmentTypeDescription = "Supervisión de construcción para Proyecto Con Detalle",
                            AssignmentTypeName = "Supervisión de Construcción",
                            Order = 4,
                            ServiceTypeId = 3
                        },
                        new
                        {
                            AssignmentTypeId = 15,
                            AssignmentTypeDescription = "Control de calidad para Proyecto Con Detalle",
                            AssignmentTypeName = "Control de Calidad",
                            Order = 5,
                            ServiceTypeId = 3
                        },
                        new
                        {
                            AssignmentTypeId = 16,
                            AssignmentTypeDescription = "Planificación de ejecución para Ejecución",
                            AssignmentTypeName = "Planificación de Ejecución",
                            Order = 1,
                            ServiceTypeId = 4
                        },
                        new
                        {
                            AssignmentTypeId = 17,
                            AssignmentTypeDescription = "Adquisición de recursos para Ejecución",
                            AssignmentTypeName = "Adquisición de Recursos",
                            Order = 2,
                            ServiceTypeId = 4
                        },
                        new
                        {
                            AssignmentTypeId = 18,
                            AssignmentTypeDescription = "Ejecución de trabajos para Ejecución",
                            AssignmentTypeName = "Ejecución de Trabajos",
                            Order = 3,
                            ServiceTypeId = 4
                        },
                        new
                        {
                            AssignmentTypeId = 19,
                            AssignmentTypeDescription = "Seguimiento de progreso para Ejecución",
                            AssignmentTypeName = "Seguimiento de Progreso",
                            Order = 4,
                            ServiceTypeId = 4
                        },
                        new
                        {
                            AssignmentTypeId = 20,
                            AssignmentTypeDescription = "Control de calidad para Ejecución",
                            AssignmentTypeName = "Control de Calidad",
                            Order = 5,
                            ServiceTypeId = 4
                        },
                        new
                        {
                            AssignmentTypeId = 21,
                            AssignmentTypeDescription = "Planificación de obra para Obra",
                            AssignmentTypeName = "Planificación de Obra",
                            Order = 1,
                            ServiceTypeId = 5
                        },
                        new
                        {
                            AssignmentTypeId = 22,
                            AssignmentTypeDescription = "Adquisición de materiales para Obra",
                            AssignmentTypeName = "Adquisición de Materiales",
                            Order = 2,
                            ServiceTypeId = 5
                        },
                        new
                        {
                            AssignmentTypeId = 23,
                            AssignmentTypeDescription = "Construcción de infraestructura para Obra",
                            AssignmentTypeName = "Construcción de Infraestructura",
                            Order = 3,
                            ServiceTypeId = 5
                        },
                        new
                        {
                            AssignmentTypeId = 24,
                            AssignmentTypeDescription = "Supervisión de construcción para Obra",
                            AssignmentTypeName = "Supervisión de Construcción",
                            Order = 4,
                            ServiceTypeId = 5
                        },
                        new
                        {
                            AssignmentTypeId = 25,
                            AssignmentTypeDescription = "Entrega y puesta en marcha para Obra",
                            AssignmentTypeName = "Entrega y Puesta en Marcha",
                            Order = 5,
                            ServiceTypeId = 5
                        });
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Budget.Budget", b =>
                {
                    b.Property<int>("BudgetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BudgetId"));

                    b.Property<string>("BudgetDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BudgetStateId")
                        .HasColumnType("int");

                    b.Property<int>("CostPerSquareMeters")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectSquareMeters")
                        .HasColumnType("int");

                    b.HasKey("BudgetId");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.BudgetState", b =>
                {
                    b.Property<int>("BudgetStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BudgetStateId"));

                    b.Property<string>("BudgetStateDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BudgetStateId");

                    b.ToTable("BudgetStates");

                    b.HasData(
                        new
                        {
                            BudgetStateId = 1,
                            BudgetStateDescription = "Revisión"
                        },
                        new
                        {
                            BudgetStateId = 2,
                            BudgetStateDescription = "Finalizado"
                        },
                        new
                        {
                            BudgetStateId = 3,
                            BudgetStateDescription = "Aprobado"
                        },
                        new
                        {
                            BudgetStateId = 4,
                            BudgetStateDescription = "Pagado"
                        });
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("ClientRoleId")
                        .HasColumnType("int");

                    b.Property<int>("ClientStateId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreferencesId")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.HasIndex("AddressId");

                    b.HasIndex("ClientRoleId");

                    b.HasIndex("ClientStateId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            AddressId = 1,
                            ClientRoleId = 1,
                            ClientStateId = 1,
                            DocumentNumber = "38474256",
                            IsDeleted = false,
                            LastName = "Mateos",
                            Mail = "marcosmateos@gmail.com",
                            Name = "Marcos",
                            Password = "1234",
                            PreferencesId = 1,
                            Telephone = "3551122334"
                        },
                        new
                        {
                            ClientId = 2,
                            AddressId = 2,
                            ClientRoleId = 1,
                            ClientStateId = 1,
                            DocumentNumber = "47768238",
                            IsDeleted = false,
                            LastName = "Gómez",
                            Mail = "juangomez@gmail.com",
                            Name = "Juan",
                            Password = "1234",
                            PreferencesId = 1,
                            Telephone = "3998877665"
                        },
                        new
                        {
                            ClientId = 3,
                            AddressId = 3,
                            ClientRoleId = 1,
                            ClientStateId = 1,
                            DocumentNumber = "22349641",
                            IsDeleted = false,
                            LastName = "Sánchez",
                            Mail = "luisasanchez@gmail.com",
                            Name = "Luisa",
                            Password = "1234",
                            PreferencesId = 1,
                            Telephone = "3889998877"
                        },
                        new
                        {
                            ClientId = 4,
                            AddressId = 4,
                            ClientRoleId = 1,
                            ClientStateId = 1,
                            DocumentNumber = "44000670",
                            IsDeleted = false,
                            LastName = "Pérez",
                            Mail = "andresperez@gmail.com",
                            Name = "Andrés",
                            Password = "1234",
                            PreferencesId = 1,
                            Telephone = "3776665544"
                        },
                        new
                        {
                            ClientId = 5,
                            AddressId = 5,
                            ClientRoleId = 1,
                            ClientStateId = 1,
                            DocumentNumber = "15487263",
                            IsDeleted = false,
                            LastName = "López",
                            Mail = "carolinalopez@gmail.com",
                            Name = "Carolina",
                            Password = "1234",
                            PreferencesId = 1,
                            Telephone = "3444455556"
                        },
                        new
                        {
                            ClientId = 6,
                            AddressId = 6,
                            ClientRoleId = 1,
                            ClientStateId = 1,
                            DocumentNumber = "29684212",
                            IsDeleted = false,
                            LastName = "Rodríguez",
                            Mail = "marianarodriguez@gmail.com",
                            Name = "Mariana",
                            Password = "1234",
                            PreferencesId = 1,
                            Telephone = "3222233334"
                        },
                        new
                        {
                            ClientId = 7,
                            AddressId = 7,
                            ClientRoleId = 1,
                            ClientStateId = 1,
                            DocumentNumber = "40699925",
                            IsDeleted = false,
                            LastName = "Hernández",
                            Mail = "javierhernandez@gmail.com",
                            Name = "Javier",
                            Password = "1234",
                            PreferencesId = 1,
                            Telephone = "3111122223"
                        },
                        new
                        {
                            ClientId = 8,
                            AddressId = 8,
                            ClientRoleId = 1,
                            ClientStateId = 1,
                            DocumentNumber = "18008722",
                            IsDeleted = false,
                            LastName = "García",
                            Mail = "valentinagarcia@gmail.com",
                            Name = "Valentina",
                            Password = "1234",
                            PreferencesId = 1,
                            Telephone = "3777788899"
                        },
                        new
                        {
                            ClientId = 9,
                            AddressId = 9,
                            ClientRoleId = 1,
                            ClientStateId = 1,
                            DocumentNumber = "29557139",
                            IsDeleted = false,
                            LastName = "Martínez",
                            Mail = "camilomartinez@gmail.com",
                            Name = "Camilo",
                            Password = "1234",
                            PreferencesId = 1,
                            Telephone = "3666677778"
                        },
                        new
                        {
                            ClientId = 10,
                            AddressId = 10,
                            ClientRoleId = 1,
                            ClientStateId = 1,
                            DocumentNumber = "45020321",
                            IsDeleted = false,
                            LastName = "Torres",
                            Mail = "danielatorres@gmail.com",
                            Name = "Daniela",
                            Password = "1234",
                            PreferencesId = 1,
                            Telephone = "3888888999"
                        });
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.ClientPreference", b =>
                {
                    b.Property<int>("ClientPreferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientPreferenceId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.HasKey("ClientPreferenceId");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientPreferences");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.ClientRegister", b =>
                {
                    b.Property<int>("ClientRegisterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientRegisterId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientRegisterId");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientRegisters");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.ClientRole", b =>
                {
                    b.Property<int>("ClientRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientRoleId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientRoleId");

                    b.ToTable("ClientRoles");

                    b.HasData(
                        new
                        {
                            ClientRoleId = 1,
                            Description = "Cliente"
                        });
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.ClientState", b =>
                {
                    b.Property<int>("ClientStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientStateId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientStateId");

                    b.ToTable("ClientStates");

                    b.HasData(
                        new
                        {
                            ClientStateId = 1,
                            Description = "Activo"
                        },
                        new
                        {
                            ClientStateId = 2,
                            Description = "Inactivo"
                        });
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("DocumentId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EventId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.HistoricalProject", b =>
                {
                    b.Property<int>("HistoricalProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoricalProjectId"));

                    b.Property<DateTime>("HistoricalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectTypeId")
                        .HasColumnType("int");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("HistoricalProjectId");

                    b.ToTable("HistoricalProjects");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Hub", b =>
                {
                    b.Property<int>("HubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HubId"));

                    b.Property<int>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<byte[]>("AttachmentData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HubDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAttachment")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCommitment")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HubId");

                    b.HasIndex("AssignmentId");

                    b.ToTable("Hub");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("ImageId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Locality", b =>
                {
                    b.Property<int>("LocalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocalityId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("LocalityId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Localities");

                    b.HasData(
                        new
                        {
                            LocalityId = 1,
                            Description = "Buenos Aires",
                            ProvinceId = 1
                        },
                        new
                        {
                            LocalityId = 2,
                            Description = "La Plata",
                            ProvinceId = 1
                        },
                        new
                        {
                            LocalityId = 3,
                            Description = "Mar del Plata",
                            ProvinceId = 1
                        },
                        new
                        {
                            LocalityId = 4,
                            Description = "Bahía Blanca",
                            ProvinceId = 1
                        },
                        new
                        {
                            LocalityId = 5,
                            Description = "San Isidro",
                            ProvinceId = 1
                        },
                        new
                        {
                            LocalityId = 6,
                            Description = "Pilar",
                            ProvinceId = 1
                        },
                        new
                        {
                            LocalityId = 7,
                            Description = "Quilmes",
                            ProvinceId = 1
                        },
                        new
                        {
                            LocalityId = 8,
                            Description = "Morón",
                            ProvinceId = 1
                        },
                        new
                        {
                            LocalityId = 9,
                            Description = "Tandil",
                            ProvinceId = 1
                        },
                        new
                        {
                            LocalityId = 10,
                            Description = "Lomas de Zamora",
                            ProvinceId = 1
                        },
                        new
                        {
                            LocalityId = 11,
                            Description = "San Fernando del Valle de Catamarca",
                            ProvinceId = 2
                        },
                        new
                        {
                            LocalityId = 12,
                            Description = "Andalgalá",
                            ProvinceId = 2
                        },
                        new
                        {
                            LocalityId = 13,
                            Description = "Belén",
                            ProvinceId = 2
                        },
                        new
                        {
                            LocalityId = 14,
                            Description = "Santa María",
                            ProvinceId = 2
                        },
                        new
                        {
                            LocalityId = 15,
                            Description = "Recreo",
                            ProvinceId = 2
                        },
                        new
                        {
                            LocalityId = 16,
                            Description = "Fiambalá",
                            ProvinceId = 2
                        },
                        new
                        {
                            LocalityId = 17,
                            Description = "Tinogasta",
                            ProvinceId = 2
                        },
                        new
                        {
                            LocalityId = 18,
                            Description = "Saujil",
                            ProvinceId = 2
                        },
                        new
                        {
                            LocalityId = 19,
                            Description = "Aconquija",
                            ProvinceId = 2
                        },
                        new
                        {
                            LocalityId = 20,
                            Description = "Los Altos",
                            ProvinceId = 2
                        },
                        new
                        {
                            LocalityId = 21,
                            Description = "Resistencia",
                            ProvinceId = 3
                        },
                        new
                        {
                            LocalityId = 22,
                            Description = "Barranqueras",
                            ProvinceId = 3
                        },
                        new
                        {
                            LocalityId = 23,
                            Description = "Fontana",
                            ProvinceId = 3
                        },
                        new
                        {
                            LocalityId = 24,
                            Description = "Presidencia Roque Sáenz Peña",
                            ProvinceId = 3
                        },
                        new
                        {
                            LocalityId = 25,
                            Description = "Villa Ángela",
                            ProvinceId = 3
                        },
                        new
                        {
                            LocalityId = 26,
                            Description = "Charata",
                            ProvinceId = 3
                        },
                        new
                        {
                            LocalityId = 27,
                            Description = "General San Martín",
                            ProvinceId = 3
                        },
                        new
                        {
                            LocalityId = 28,
                            Description = "Juan José Castelli",
                            ProvinceId = 3
                        },
                        new
                        {
                            LocalityId = 29,
                            Description = "Quitilipi",
                            ProvinceId = 3
                        },
                        new
                        {
                            LocalityId = 30,
                            Description = "Machagai",
                            ProvinceId = 3
                        },
                        new
                        {
                            LocalityId = 31,
                            Description = "Rawson",
                            ProvinceId = 4
                        },
                        new
                        {
                            LocalityId = 32,
                            Description = "Comodoro Rivadavia",
                            ProvinceId = 4
                        },
                        new
                        {
                            LocalityId = 33,
                            Description = "Puerto Madryn",
                            ProvinceId = 4
                        },
                        new
                        {
                            LocalityId = 34,
                            Description = "Trelew",
                            ProvinceId = 4
                        },
                        new
                        {
                            LocalityId = 35,
                            Description = "Esquel",
                            ProvinceId = 4
                        },
                        new
                        {
                            LocalityId = 36,
                            Description = "Rada Tilly",
                            ProvinceId = 4
                        },
                        new
                        {
                            LocalityId = 37,
                            Description = "Gaiman",
                            ProvinceId = 4
                        },
                        new
                        {
                            LocalityId = 38,
                            Description = "Sarmiento",
                            ProvinceId = 4
                        },
                        new
                        {
                            LocalityId = 39,
                            Description = "Dolavon",
                            ProvinceId = 4
                        },
                        new
                        {
                            LocalityId = 40,
                            Description = "Gobernador Costa",
                            ProvinceId = 4
                        },
                        new
                        {
                            LocalityId = 41,
                            Description = "Córdoba",
                            ProvinceId = 5
                        },
                        new
                        {
                            LocalityId = 42,
                            Description = "Villa Carlos Paz",
                            ProvinceId = 5
                        },
                        new
                        {
                            LocalityId = 43,
                            Description = "Río Cuarto",
                            ProvinceId = 5
                        },
                        new
                        {
                            LocalityId = 44,
                            Description = "Alta Gracia",
                            ProvinceId = 5
                        },
                        new
                        {
                            LocalityId = 45,
                            Description = "San Francisco",
                            ProvinceId = 5
                        },
                        new
                        {
                            LocalityId = 46,
                            Description = "Villa María",
                            ProvinceId = 5
                        },
                        new
                        {
                            LocalityId = 47,
                            Description = "Jesús María",
                            ProvinceId = 5
                        },
                        new
                        {
                            LocalityId = 48,
                            Description = "Bell Ville",
                            ProvinceId = 5
                        },
                        new
                        {
                            LocalityId = 49,
                            Description = "Cosquín",
                            ProvinceId = 5
                        },
                        new
                        {
                            LocalityId = 50,
                            Description = "La Falda",
                            ProvinceId = 5
                        },
                        new
                        {
                            LocalityId = 51,
                            Description = "Corrientes",
                            ProvinceId = 6
                        },
                        new
                        {
                            LocalityId = 52,
                            Description = "Goya",
                            ProvinceId = 6
                        },
                        new
                        {
                            LocalityId = 53,
                            Description = "Mercedes",
                            ProvinceId = 6
                        },
                        new
                        {
                            LocalityId = 54,
                            Description = "Curuzú Cuatiá",
                            ProvinceId = 6
                        },
                        new
                        {
                            LocalityId = 55,
                            Description = "Bella Vista",
                            ProvinceId = 6
                        },
                        new
                        {
                            LocalityId = 56,
                            Description = "Esquina",
                            ProvinceId = 6
                        },
                        new
                        {
                            LocalityId = 57,
                            Description = "Ituzaingó",
                            ProvinceId = 6
                        },
                        new
                        {
                            LocalityId = 58,
                            Description = "Santo Tomé",
                            ProvinceId = 6
                        },
                        new
                        {
                            LocalityId = 59,
                            Description = "Monte Caseros",
                            ProvinceId = 6
                        },
                        new
                        {
                            LocalityId = 60,
                            Description = "Paso de los Libres",
                            ProvinceId = 6
                        },
                        new
                        {
                            LocalityId = 61,
                            Description = "Paraná",
                            ProvinceId = 7
                        },
                        new
                        {
                            LocalityId = 62,
                            Description = "Concordia",
                            ProvinceId = 7
                        },
                        new
                        {
                            LocalityId = 63,
                            Description = "Gualeguaychú",
                            ProvinceId = 7
                        },
                        new
                        {
                            LocalityId = 64,
                            Description = "Gualeguay",
                            ProvinceId = 7
                        },
                        new
                        {
                            LocalityId = 65,
                            Description = "Chajarí",
                            ProvinceId = 7
                        },
                        new
                        {
                            LocalityId = 66,
                            Description = "Villaguay",
                            ProvinceId = 7
                        },
                        new
                        {
                            LocalityId = 67,
                            Description = "Colón",
                            ProvinceId = 7
                        },
                        new
                        {
                            LocalityId = 68,
                            Description = "Victoria",
                            ProvinceId = 7
                        },
                        new
                        {
                            LocalityId = 69,
                            Description = "Diamante",
                            ProvinceId = 7
                        },
                        new
                        {
                            LocalityId = 70,
                            Description = "La Paz",
                            ProvinceId = 7
                        },
                        new
                        {
                            LocalityId = 71,
                            Description = "Formosa",
                            ProvinceId = 8
                        },
                        new
                        {
                            LocalityId = 72,
                            Description = "Clorinda",
                            ProvinceId = 8
                        },
                        new
                        {
                            LocalityId = 73,
                            Description = "Pirané",
                            ProvinceId = 8
                        },
                        new
                        {
                            LocalityId = 74,
                            Description = "El Colorado",
                            ProvinceId = 8
                        },
                        new
                        {
                            LocalityId = 75,
                            Description = "Las Lomitas",
                            ProvinceId = 8
                        },
                        new
                        {
                            LocalityId = 76,
                            Description = "Riacho He Hé",
                            ProvinceId = 8
                        },
                        new
                        {
                            LocalityId = 77,
                            Description = "Laguna Yema",
                            ProvinceId = 8
                        },
                        new
                        {
                            LocalityId = 78,
                            Description = "Ibarreta",
                            ProvinceId = 8
                        },
                        new
                        {
                            LocalityId = 79,
                            Description = "General Güemes",
                            ProvinceId = 8
                        },
                        new
                        {
                            LocalityId = 80,
                            Description = "San Martín 2",
                            ProvinceId = 8
                        },
                        new
                        {
                            LocalityId = 81,
                            Description = "San Salvador de Jujuy",
                            ProvinceId = 9
                        },
                        new
                        {
                            LocalityId = 82,
                            Description = "Palpalá",
                            ProvinceId = 9
                        },
                        new
                        {
                            LocalityId = 83,
                            Description = "San Pedro",
                            ProvinceId = 9
                        },
                        new
                        {
                            LocalityId = 84,
                            Description = "Libertador General San Martín",
                            ProvinceId = 9
                        },
                        new
                        {
                            LocalityId = 85,
                            Description = "Perico",
                            ProvinceId = 9
                        },
                        new
                        {
                            LocalityId = 86,
                            Description = "El Carmen",
                            ProvinceId = 9
                        },
                        new
                        {
                            LocalityId = 87,
                            Description = "Humahuaca",
                            ProvinceId = 9
                        },
                        new
                        {
                            LocalityId = 88,
                            Description = "La Quiaca",
                            ProvinceId = 9
                        },
                        new
                        {
                            LocalityId = 89,
                            Description = "Tilcara",
                            ProvinceId = 9
                        },
                        new
                        {
                            LocalityId = 90,
                            Description = "Abra Pampa",
                            ProvinceId = 9
                        },
                        new
                        {
                            LocalityId = 91,
                            Description = "Santa Rosa",
                            ProvinceId = 10
                        },
                        new
                        {
                            LocalityId = 92,
                            Description = "General Pico",
                            ProvinceId = 10
                        },
                        new
                        {
                            LocalityId = 93,
                            Description = "Toay",
                            ProvinceId = 10
                        },
                        new
                        {
                            LocalityId = 94,
                            Description = "Realicó",
                            ProvinceId = 10
                        },
                        new
                        {
                            LocalityId = 95,
                            Description = "Eduardo Castex",
                            ProvinceId = 10
                        },
                        new
                        {
                            LocalityId = 96,
                            Description = "General Acha",
                            ProvinceId = 10
                        },
                        new
                        {
                            LocalityId = 97,
                            Description = "25 de Mayo",
                            ProvinceId = 10
                        },
                        new
                        {
                            LocalityId = 98,
                            Description = "General Manuel J. Campos",
                            ProvinceId = 10
                        },
                        new
                        {
                            LocalityId = 99,
                            Description = "Catriló",
                            ProvinceId = 10
                        },
                        new
                        {
                            LocalityId = 100,
                            Description = "Macachín",
                            ProvinceId = 10
                        },
                        new
                        {
                            LocalityId = 101,
                            Description = "La Rioja",
                            ProvinceId = 11
                        },
                        new
                        {
                            LocalityId = 102,
                            Description = "Chilecito",
                            ProvinceId = 11
                        },
                        new
                        {
                            LocalityId = 103,
                            Description = "Chamical",
                            ProvinceId = 11
                        },
                        new
                        {
                            LocalityId = 104,
                            Description = "Famatina",
                            ProvinceId = 11
                        },
                        new
                        {
                            LocalityId = 105,
                            Description = "Chepes",
                            ProvinceId = 11
                        },
                        new
                        {
                            LocalityId = 106,
                            Description = "Arauco",
                            ProvinceId = 11
                        },
                        new
                        {
                            LocalityId = 107,
                            Description = "Olta",
                            ProvinceId = 11
                        },
                        new
                        {
                            LocalityId = 108,
                            Description = "Villa Unión",
                            ProvinceId = 11
                        },
                        new
                        {
                            LocalityId = 109,
                            Description = "Villa Castelli",
                            ProvinceId = 11
                        },
                        new
                        {
                            LocalityId = 110,
                            Description = "Sanagasta",
                            ProvinceId = 11
                        },
                        new
                        {
                            LocalityId = 111,
                            Description = "Mendoza",
                            ProvinceId = 12
                        },
                        new
                        {
                            LocalityId = 112,
                            Description = "San Rafael",
                            ProvinceId = 12
                        },
                        new
                        {
                            LocalityId = 113,
                            Description = "Godoy Cruz",
                            ProvinceId = 12
                        },
                        new
                        {
                            LocalityId = 114,
                            Description = "Luján de Cuyo",
                            ProvinceId = 12
                        },
                        new
                        {
                            LocalityId = 115,
                            Description = "Las Heras",
                            ProvinceId = 12
                        },
                        new
                        {
                            LocalityId = 116,
                            Description = "Maipú",
                            ProvinceId = 12
                        },
                        new
                        {
                            LocalityId = 117,
                            Description = "San Martín",
                            ProvinceId = 12
                        },
                        new
                        {
                            LocalityId = 118,
                            Description = "Malargüe",
                            ProvinceId = 12
                        },
                        new
                        {
                            LocalityId = 119,
                            Description = "Tunuyán",
                            ProvinceId = 12
                        },
                        new
                        {
                            LocalityId = 120,
                            Description = "General Alvear",
                            ProvinceId = 12
                        },
                        new
                        {
                            LocalityId = 121,
                            Description = "Posadas",
                            ProvinceId = 13
                        },
                        new
                        {
                            LocalityId = 122,
                            Description = "Eldorado",
                            ProvinceId = 13
                        },
                        new
                        {
                            LocalityId = 123,
                            Description = "Puerto Iguazú",
                            ProvinceId = 13
                        },
                        new
                        {
                            LocalityId = 124,
                            Description = "Oberá",
                            ProvinceId = 13
                        },
                        new
                        {
                            LocalityId = 125,
                            Description = "Apostoles",
                            ProvinceId = 13
                        },
                        new
                        {
                            LocalityId = 126,
                            Description = "San Vicente",
                            ProvinceId = 13
                        },
                        new
                        {
                            LocalityId = 127,
                            Description = "Alem",
                            ProvinceId = 13
                        },
                        new
                        {
                            LocalityId = 128,
                            Description = "Jardín América",
                            ProvinceId = 13
                        },
                        new
                        {
                            LocalityId = 129,
                            Description = "Montecarlo",
                            ProvinceId = 13
                        },
                        new
                        {
                            LocalityId = 130,
                            Description = "Puerto Rico",
                            ProvinceId = 13
                        },
                        new
                        {
                            LocalityId = 131,
                            Description = "Neuquén",
                            ProvinceId = 14
                        },
                        new
                        {
                            LocalityId = 132,
                            Description = "San Martín de los Andes",
                            ProvinceId = 14
                        },
                        new
                        {
                            LocalityId = 133,
                            Description = "Cutral Có",
                            ProvinceId = 14
                        },
                        new
                        {
                            LocalityId = 134,
                            Description = "Plottier",
                            ProvinceId = 14
                        },
                        new
                        {
                            LocalityId = 135,
                            Description = "Zapala",
                            ProvinceId = 14
                        },
                        new
                        {
                            LocalityId = 136,
                            Description = "Centenario",
                            ProvinceId = 14
                        },
                        new
                        {
                            LocalityId = 137,
                            Description = "Villa La Angostura",
                            ProvinceId = 14
                        },
                        new
                        {
                            LocalityId = 138,
                            Description = "Chos Malal",
                            ProvinceId = 14
                        },
                        new
                        {
                            LocalityId = 139,
                            Description = "Senillosa",
                            ProvinceId = 14
                        },
                        new
                        {
                            LocalityId = 140,
                            Description = "Rincón de los Sauces",
                            ProvinceId = 14
                        },
                        new
                        {
                            LocalityId = 141,
                            Description = "Viedma",
                            ProvinceId = 15
                        },
                        new
                        {
                            LocalityId = 142,
                            Description = "San Carlos de Bariloche",
                            ProvinceId = 15
                        },
                        new
                        {
                            LocalityId = 143,
                            Description = "General Roca",
                            ProvinceId = 15
                        },
                        new
                        {
                            LocalityId = 144,
                            Description = "Cipolletti",
                            ProvinceId = 15
                        },
                        new
                        {
                            LocalityId = 145,
                            Description = "Allen",
                            ProvinceId = 15
                        },
                        new
                        {
                            LocalityId = 146,
                            Description = "El Bolsón",
                            ProvinceId = 15
                        },
                        new
                        {
                            LocalityId = 147,
                            Description = "Ingeniero Jacobacci",
                            ProvinceId = 15
                        },
                        new
                        {
                            LocalityId = 148,
                            Description = "Villa Regina",
                            ProvinceId = 15
                        },
                        new
                        {
                            LocalityId = 150,
                            Description = "Choele Choel",
                            ProvinceId = 15
                        },
                        new
                        {
                            LocalityId = 151,
                            Description = "Cinco Saltos",
                            ProvinceId = 15
                        },
                        new
                        {
                            LocalityId = 152,
                            Description = "Salta",
                            ProvinceId = 16
                        },
                        new
                        {
                            LocalityId = 153,
                            Description = "San Ramón de la Nueva Orán",
                            ProvinceId = 16
                        },
                        new
                        {
                            LocalityId = 154,
                            Description = "General Güemes",
                            ProvinceId = 16
                        },
                        new
                        {
                            LocalityId = 155,
                            Description = "Tartagal",
                            ProvinceId = 16
                        },
                        new
                        {
                            LocalityId = 156,
                            Description = "Cafayate",
                            ProvinceId = 16
                        },
                        new
                        {
                            LocalityId = 157,
                            Description = "San Pedro de Jujuy",
                            ProvinceId = 16
                        },
                        new
                        {
                            LocalityId = 158,
                            Description = "Metán",
                            ProvinceId = 16
                        },
                        new
                        {
                            LocalityId = 159,
                            Description = "El Carril",
                            ProvinceId = 16
                        },
                        new
                        {
                            LocalityId = 160,
                            Description = "Rosario de la Frontera",
                            ProvinceId = 16
                        },
                        new
                        {
                            LocalityId = 161,
                            Description = "Chicoana",
                            ProvinceId = 16
                        },
                        new
                        {
                            LocalityId = 162,
                            Description = "San Juan",
                            ProvinceId = 17
                        },
                        new
                        {
                            LocalityId = 163,
                            Description = "Rawson",
                            ProvinceId = 17
                        },
                        new
                        {
                            LocalityId = 164,
                            Description = "Chimbas",
                            ProvinceId = 17
                        },
                        new
                        {
                            LocalityId = 165,
                            Description = "Pocito",
                            ProvinceId = 17
                        },
                        new
                        {
                            LocalityId = 166,
                            Description = "Rivadavia",
                            ProvinceId = 17
                        },
                        new
                        {
                            LocalityId = 167,
                            Description = "Santa Lucía",
                            ProvinceId = 17
                        },
                        new
                        {
                            LocalityId = 168,
                            Description = "Caucete",
                            ProvinceId = 17
                        },
                        new
                        {
                            LocalityId = 169,
                            Description = "Albardón",
                            ProvinceId = 17
                        },
                        new
                        {
                            LocalityId = 170,
                            Description = "Jáchal",
                            ProvinceId = 17
                        },
                        new
                        {
                            LocalityId = 171,
                            Description = "25 de Mayo",
                            ProvinceId = 17
                        },
                        new
                        {
                            LocalityId = 172,
                            Description = "San Luis",
                            ProvinceId = 18
                        },
                        new
                        {
                            LocalityId = 173,
                            Description = "Villa Mercedes",
                            ProvinceId = 18
                        },
                        new
                        {
                            LocalityId = 174,
                            Description = "San Francisco del Monte de Oro",
                            ProvinceId = 18
                        },
                        new
                        {
                            LocalityId = 175,
                            Description = "La Toma",
                            ProvinceId = 18
                        },
                        new
                        {
                            LocalityId = 176,
                            Description = "Justo Daract",
                            ProvinceId = 18
                        },
                        new
                        {
                            LocalityId = 177,
                            Description = "Merlo",
                            ProvinceId = 18
                        },
                        new
                        {
                            LocalityId = 178,
                            Description = "Santa Rosa del Conlara",
                            ProvinceId = 18
                        },
                        new
                        {
                            LocalityId = 179,
                            Description = "Naschel",
                            ProvinceId = 18
                        },
                        new
                        {
                            LocalityId = 180,
                            Description = "Quines",
                            ProvinceId = 18
                        },
                        new
                        {
                            LocalityId = 181,
                            Description = "Concarán",
                            ProvinceId = 18
                        },
                        new
                        {
                            LocalityId = 182,
                            Description = "Río Gallegos",
                            ProvinceId = 19
                        },
                        new
                        {
                            LocalityId = 183,
                            Description = "Caleta Olivia",
                            ProvinceId = 19
                        },
                        new
                        {
                            LocalityId = 184,
                            Description = "El Calafate",
                            ProvinceId = 19
                        },
                        new
                        {
                            LocalityId = 185,
                            Description = "Puerto Deseado",
                            ProvinceId = 19
                        },
                        new
                        {
                            LocalityId = 186,
                            Description = "Río Turbio",
                            ProvinceId = 19
                        },
                        new
                        {
                            LocalityId = 187,
                            Description = "28 de Noviembre",
                            ProvinceId = 19
                        },
                        new
                        {
                            LocalityId = 188,
                            Description = "Pico Truncado",
                            ProvinceId = 19
                        },
                        new
                        {
                            LocalityId = 189,
                            Description = "Las Heras",
                            ProvinceId = 19
                        },
                        new
                        {
                            LocalityId = 190,
                            Description = "Perito Moreno",
                            ProvinceId = 19
                        },
                        new
                        {
                            LocalityId = 191,
                            Description = "Gobernador Gregores",
                            ProvinceId = 19
                        },
                        new
                        {
                            LocalityId = 192,
                            Description = "Santa Fe",
                            ProvinceId = 20
                        },
                        new
                        {
                            LocalityId = 193,
                            Description = "Rosario",
                            ProvinceId = 20
                        },
                        new
                        {
                            LocalityId = 194,
                            Description = "Venado Tuerto",
                            ProvinceId = 20
                        },
                        new
                        {
                            LocalityId = 195,
                            Description = "Rafaela",
                            ProvinceId = 20
                        },
                        new
                        {
                            LocalityId = 196,
                            Description = "Reconquista",
                            ProvinceId = 20
                        },
                        new
                        {
                            LocalityId = 197,
                            Description = "Santiago del Estero",
                            ProvinceId = 21
                        },
                        new
                        {
                            LocalityId = 198,
                            Description = "La Banda",
                            ProvinceId = 21
                        },
                        new
                        {
                            LocalityId = 199,
                            Description = "Termas de Río Hondo",
                            ProvinceId = 21
                        },
                        new
                        {
                            LocalityId = 200,
                            Description = "Añatuya",
                            ProvinceId = 21
                        },
                        new
                        {
                            LocalityId = 201,
                            Description = "Fernández",
                            ProvinceId = 21
                        },
                        new
                        {
                            LocalityId = 202,
                            Description = "Clodomira",
                            ProvinceId = 21
                        },
                        new
                        {
                            LocalityId = 203,
                            Description = "Frías",
                            ProvinceId = 21
                        },
                        new
                        {
                            LocalityId = 204,
                            Description = "Loreto",
                            ProvinceId = 21
                        },
                        new
                        {
                            LocalityId = 205,
                            Description = "Suncho Corral",
                            ProvinceId = 21
                        },
                        new
                        {
                            LocalityId = 206,
                            Description = "Beltrán",
                            ProvinceId = 21
                        },
                        new
                        {
                            LocalityId = 207,
                            Description = "Ushuaia",
                            ProvinceId = 22
                        },
                        new
                        {
                            LocalityId = 208,
                            Description = "Río Grande",
                            ProvinceId = 22
                        },
                        new
                        {
                            LocalityId = 209,
                            Description = "Tolhuin",
                            ProvinceId = 22
                        },
                        new
                        {
                            LocalityId = 210,
                            Description = "Puerto Almanza",
                            ProvinceId = 22
                        },
                        new
                        {
                            LocalityId = 211,
                            Description = "San Julián",
                            ProvinceId = 22
                        },
                        new
                        {
                            LocalityId = 212,
                            Description = "Puerto Williams",
                            ProvinceId = 22
                        },
                        new
                        {
                            LocalityId = 213,
                            Description = "Puerto Toro",
                            ProvinceId = 22
                        },
                        new
                        {
                            LocalityId = 214,
                            Description = "Puerto Yartou",
                            ProvinceId = 22
                        },
                        new
                        {
                            LocalityId = 215,
                            Description = "Caleta María",
                            ProvinceId = 22
                        },
                        new
                        {
                            LocalityId = 216,
                            Description = "Puerto Roballo",
                            ProvinceId = 22
                        },
                        new
                        {
                            LocalityId = 217,
                            Description = "San Miguel de Tucumán",
                            ProvinceId = 23
                        },
                        new
                        {
                            LocalityId = 218,
                            Description = "Yerba Buena",
                            ProvinceId = 23
                        },
                        new
                        {
                            LocalityId = 219,
                            Description = "Banda del Río Salí",
                            ProvinceId = 23
                        },
                        new
                        {
                            LocalityId = 220,
                            Description = "Concepción",
                            ProvinceId = 23
                        },
                        new
                        {
                            LocalityId = 221,
                            Description = "Aguilares",
                            ProvinceId = 23
                        },
                        new
                        {
                            LocalityId = 222,
                            Description = "Tafí Viejo",
                            ProvinceId = 23
                        },
                        new
                        {
                            LocalityId = 223,
                            Description = "Famaillá",
                            ProvinceId = 23
                        },
                        new
                        {
                            LocalityId = 224,
                            Description = "Tafí del Valle",
                            ProvinceId = 23
                        },
                        new
                        {
                            LocalityId = 225,
                            Description = "Monteros",
                            ProvinceId = 23
                        },
                        new
                        {
                            LocalityId = 226,
                            Description = "Lules",
                            ProvinceId = 23
                        });
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Mail", b =>
                {
                    b.Property<int>("MailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MailId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("MailText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MailId");

                    b.HasIndex("ClientId");

                    b.HasIndex("UserId");

                    b.ToTable("Mails");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MessageId");

                    b.HasIndex("ClientId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("NotificationId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BudgetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentMethodId"));

                    b.Property<string>("MethodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentMethodId");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            PaymentMethodId = 1,
                            MethodName = "Efectivo"
                        },
                        new
                        {
                            PaymentMethodId = 2,
                            MethodName = "Transferencia"
                        },
                        new
                        {
                            PaymentMethodId = 3,
                            MethodName = "Débito"
                        });
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectStateId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceTypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProjectStateId");

                    b.HasIndex("ProjectTypeId");

                    b.HasIndex("ServiceTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            Budget = 0m,
                            ClientId = 4,
                            IsDeleted = false,
                            Name = "Casa en desnivel",
                            ProjectStateId = 4,
                            ProjectTypeId = 2,
                            ServiceTypeId = 3,
                            UserId = 4
                        },
                        new
                        {
                            ProjectId = 2,
                            Budget = 0m,
                            ClientId = 7,
                            IsDeleted = false,
                            Name = "Remodelación de oficina",
                            ProjectStateId = 1,
                            ProjectTypeId = 5,
                            ServiceTypeId = 1,
                            UserId = 3
                        },
                        new
                        {
                            ProjectId = 3,
                            Budget = 0m,
                            ClientId = 2,
                            IsDeleted = false,
                            Name = "Construcción de edificio residencial",
                            ProjectStateId = 5,
                            ProjectTypeId = 4,
                            ServiceTypeId = 2,
                            UserId = 2
                        },
                        new
                        {
                            ProjectId = 4,
                            Budget = 0m,
                            ClientId = 5,
                            IsDeleted = false,
                            Name = "Renovación de cocina",
                            ProjectStateId = 2,
                            ProjectTypeId = 1,
                            ServiceTypeId = 1,
                            UserId = 4
                        },
                        new
                        {
                            ProjectId = 5,
                            Budget = 0m,
                            ClientId = 3,
                            IsDeleted = false,
                            Name = "Ampliación de casa",
                            ProjectStateId = 3,
                            ProjectTypeId = 3,
                            ServiceTypeId = 3,
                            UserId = 3
                        },
                        new
                        {
                            ProjectId = 6,
                            Budget = 0m,
                            ClientId = 9,
                            IsDeleted = false,
                            Name = "Diseño de jardín",
                            ProjectStateId = 4,
                            ProjectTypeId = 2,
                            ServiceTypeId = 1,
                            UserId = 2
                        },
                        new
                        {
                            ProjectId = 7,
                            Budget = 0m,
                            ClientId = 1,
                            IsDeleted = false,
                            Name = "Proyecto de infraestructura vial",
                            ProjectStateId = 5,
                            ProjectTypeId = 5,
                            ServiceTypeId = 2,
                            UserId = 4
                        },
                        new
                        {
                            ProjectId = 8,
                            Budget = 0m,
                            ClientId = 6,
                            IsDeleted = false,
                            Name = "Construcción de centro comercial",
                            ProjectStateId = 4,
                            ProjectTypeId = 4,
                            ServiceTypeId = 3,
                            UserId = 2
                        },
                        new
                        {
                            ProjectId = 9,
                            Budget = 0m,
                            ClientId = 8,
                            IsDeleted = false,
                            Name = "Remodelación de baño",
                            ProjectStateId = 3,
                            ProjectTypeId = 3,
                            ServiceTypeId = 1,
                            UserId = 3
                        },
                        new
                        {
                            ProjectId = 10,
                            Budget = 0m,
                            ClientId = 10,
                            IsDeleted = false,
                            Name = "Casa en la playa",
                            ProjectStateId = 1,
                            ProjectTypeId = 1,
                            ServiceTypeId = 2,
                            UserId = 4
                        },
                        new
                        {
                            ProjectId = 11,
                            Budget = 0m,
                            ClientId = 2,
                            IsDeleted = false,
                            Name = "Proyecto de desarrollo de software",
                            ProjectStateId = 2,
                            ProjectTypeId = 2,
                            ServiceTypeId = 3,
                            UserId = 2
                        },
                        new
                        {
                            ProjectId = 12,
                            Budget = 0m,
                            ClientId = 3,
                            IsDeleted = false,
                            Name = "Construcción de hotel",
                            ProjectStateId = 4,
                            ProjectTypeId = 4,
                            ServiceTypeId = 2,
                            UserId = 3
                        },
                        new
                        {
                            ProjectId = 13,
                            Budget = 0m,
                            ClientId = 5,
                            IsDeleted = false,
                            Name = "Renovación de fachada",
                            ProjectStateId = 5,
                            ProjectTypeId = 5,
                            ServiceTypeId = 1,
                            UserId = 4
                        },
                        new
                        {
                            ProjectId = 14,
                            Budget = 0m,
                            ClientId = 9,
                            IsDeleted = false,
                            Name = "Construcción de parque temático",
                            ProjectStateId = 3,
                            ProjectTypeId = 3,
                            ServiceTypeId = 3,
                            UserId = 3
                        },
                        new
                        {
                            ProjectId = 15,
                            Budget = 0m,
                            ClientId = 1,
                            IsDeleted = false,
                            Name = "Remodelación de local comercial",
                            ProjectStateId = 1,
                            ProjectTypeId = 1,
                            ServiceTypeId = 1,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.ProjectState", b =>
                {
                    b.Property<int>("ProjectStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectStateId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectStateId");

                    b.ToTable("ProjectState");

                    b.HasData(
                        new
                        {
                            ProjectStateId = 1,
                            Description = "Activo"
                        },
                        new
                        {
                            ProjectStateId = 2,
                            Description = "Inactivo"
                        },
                        new
                        {
                            ProjectStateId = 3,
                            Description = "En progreso"
                        },
                        new
                        {
                            ProjectStateId = 4,
                            Description = "Completado"
                        },
                        new
                        {
                            ProjectStateId = 5,
                            Description = "Pendiente"
                        });
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.ProjectType", b =>
                {
                    b.Property<int>("ProjectTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectTypeId"));

                    b.Property<decimal>("ProfessionalFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProjectTypeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RangeMax")
                        .HasColumnType("int");

                    b.Property<int>("RangeMin")
                        .HasColumnType("int");

                    b.HasKey("ProjectTypeId");

                    b.ToTable("ProjectTypes");

                    b.HasData(
                        new
                        {
                            ProjectTypeId = 1,
                            ProfessionalFee = 200m,
                            ProjectTypeDescription = "ProjectTypeDesc1",
                            ProjectTypeName = "ProjectTypeName1",
                            RangeMax = 10,
                            RangeMin = 1
                        },
                        new
                        {
                            ProjectTypeId = 2,
                            ProfessionalFee = 300m,
                            ProjectTypeDescription = "ProjectTypeDesc2",
                            ProjectTypeName = "ProjectTypeName2",
                            RangeMax = 20,
                            RangeMin = 10
                        });
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Province", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProvinceId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProvinceId");

                    b.ToTable("Provinces");

                    b.HasData(
                        new
                        {
                            ProvinceId = 1,
                            Description = "Buenos Aires"
                        },
                        new
                        {
                            ProvinceId = 2,
                            Description = "Catamarca"
                        },
                        new
                        {
                            ProvinceId = 3,
                            Description = "Chaco"
                        },
                        new
                        {
                            ProvinceId = 4,
                            Description = "Chubut"
                        },
                        new
                        {
                            ProvinceId = 5,
                            Description = "Córdoba"
                        },
                        new
                        {
                            ProvinceId = 6,
                            Description = "Corrientes"
                        },
                        new
                        {
                            ProvinceId = 7,
                            Description = "Entre Ríos"
                        },
                        new
                        {
                            ProvinceId = 8,
                            Description = "Formosa"
                        },
                        new
                        {
                            ProvinceId = 9,
                            Description = "Jujuy"
                        },
                        new
                        {
                            ProvinceId = 10,
                            Description = "La Pampa"
                        },
                        new
                        {
                            ProvinceId = 11,
                            Description = "La Rioja"
                        },
                        new
                        {
                            ProvinceId = 12,
                            Description = "Mendoza"
                        },
                        new
                        {
                            ProvinceId = 13,
                            Description = "Misiones"
                        },
                        new
                        {
                            ProvinceId = 14,
                            Description = "Neuquén"
                        },
                        new
                        {
                            ProvinceId = 15,
                            Description = "Río Negro"
                        },
                        new
                        {
                            ProvinceId = 16,
                            Description = "Salta"
                        },
                        new
                        {
                            ProvinceId = 17,
                            Description = "San Juan"
                        },
                        new
                        {
                            ProvinceId = 18,
                            Description = "San Luis"
                        },
                        new
                        {
                            ProvinceId = 19,
                            Description = "Santa Cruz"
                        },
                        new
                        {
                            ProvinceId = 20,
                            Description = "Santa Fe"
                        },
                        new
                        {
                            ProvinceId = 21,
                            Description = "Santiago del Estero"
                        },
                        new
                        {
                            ProvinceId = 22,
                            Description = "Tierra del Fuego"
                        },
                        new
                        {
                            ProvinceId = 23,
                            Description = "Tucumán"
                        });
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("ReportId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.ServiceType", b =>
                {
                    b.Property<int>("ServiceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceTypeId"));

                    b.Property<bool?>("IsPrivate")
                        .HasColumnType("bit");

                    b.Property<string>("ServiceTypeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceTypeImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServiceTypeId");

                    b.ToTable("ServiceTypes");

                    b.HasData(
                        new
                        {
                            ServiceTypeId = 1,
                            ServiceTypeDescription = "Se trabajará en el completamiento del anteproyecto, desarrollando el material necesario para la ejecución en obra.",
                            ServiceTypeName = "Proyecto con detalle"
                        },
                        new
                        {
                            ServiceTypeId = 2,
                            ServiceTypeDescription = "Control de obra Planificación de obra (secuencia lógica de ejecución de cada actividad o rubro) Programación de obra (Estimación de tiempo para ejecutar cada actividad y rendimiento)",
                            ServiceTypeName = "Conducción Técnica"
                        },
                        new
                        {
                            ServiceTypeId = 3,
                            ServiceTypeDescription = "Se trabajará con la IDEA DE PROYECTO, atendiendo a la situación particular del cliente según la información brindada por el mismo (necesidades, deseos, recursos disponibles, lote, orientaciones, implantación, programa, usuario) Se escucha del cliente, se capta y procesa la información, estudian y analizan todas estas variables, brindando asesoramiento profesional y personalizado, determinando las mejores alernativas para llevar a cabo el encargo, según cada caso en particular.",
                            ServiceTypeName = "Anteproyecto"
                        },
                        new
                        {
                            ServiceTypeId = 4,
                            ServiceTypeDescription = "Se trabajará con la .",
                            ServiceTypeName = "Proyecto sin detalle"
                        },
                        new
                        {
                            ServiceTypeId = 5,
                            ServiceTypeDescription = "Se trabajará con la ",
                            ServiceTypeName = "Proyecto y Ejecucion"
                        });
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserPreferenceId")
                        .HasColumnType("int");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserStateId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("UserPreferenceId")
                        .IsUnique()
                        .HasFilter("[UserPreferenceId] IS NOT NULL");

                    b.HasIndex("UserRoleId");

                    b.HasIndex("UserStateId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            DocumentNumber = "30236541",
                            IsDeleted = false,
                            LastName = "Admin",
                            Mail = "admin@admin.com",
                            Name = "Admin",
                            Password = "1234",
                            Telephone = "4795263",
                            UserRoleId = 1,
                            UserStateId = 1
                        },
                        new
                        {
                            UserId = 2,
                            DocumentNumber = "47768238",
                            IsDeleted = false,
                            LastName = "Martin",
                            Mail = "dariomartin@gmail.com",
                            Name = "Dario",
                            Password = "1234",
                            Telephone = "3998877665",
                            UserRoleId = 2,
                            UserStateId = 1
                        },
                        new
                        {
                            UserId = 3,
                            DocumentNumber = "22349641",
                            IsDeleted = false,
                            LastName = "Fulgenzi",
                            Mail = "melissafulgenzi@gmail.com",
                            Name = "Melissa",
                            Password = "1234",
                            Telephone = "3889998877",
                            UserRoleId = 2,
                            UserStateId = 1
                        },
                        new
                        {
                            UserId = 4,
                            DocumentNumber = "44000670",
                            IsDeleted = false,
                            LastName = "D´Gaudio",
                            Mail = "germandgaudio@gmail.com",
                            Name = "German",
                            Password = "1234",
                            Telephone = "3776665544",
                            UserRoleId = 2,
                            UserStateId = 1
                        });
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.UserPreference", b =>
                {
                    b.Property<int>("UserPreferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserPreferenceId"));

                    b.HasKey("UserPreferenceId");

                    b.ToTable("UserPreferences");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.UserRegister", b =>
                {
                    b.Property<int>("UserRegisterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRegisterId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserRegisterId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRegisters");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserRoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserRoleId = 1,
                            Description = "Admin"
                        },
                        new
                        {
                            UserRoleId = 2,
                            Description = "Usuario"
                        },
                        new
                        {
                            UserRoleId = 3,
                            Description = "Soporte"
                        },
                        new
                        {
                            UserRoleId = 4,
                            Description = "Técnico"
                        },
                        new
                        {
                            UserRoleId = 5,
                            Description = "Visitante"
                        });
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.UserState", b =>
                {
                    b.Property<int>("UserStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserStateId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserStateId");

                    b.ToTable("UserStates");

                    b.HasData(
                        new
                        {
                            UserStateId = 1,
                            Description = "Activo"
                        },
                        new
                        {
                            UserStateId = 2,
                            Description = "Inactivo"
                        });
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Address", b =>
                {
                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.Locality", "LocalityNavigation")
                        .WithMany("Address")
                        .HasForeignKey("LocalityId");

                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.Province", "ProvinceNavigation")
                        .WithMany()
                        .HasForeignKey("ProvinceId");

                    b.Navigation("LocalityNavigation");

                    b.Navigation("ProvinceNavigation");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Assignment", b =>
                {
                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.AssignmentType", "AssignmentType")
                        .WithMany()
                        .HasForeignKey("AssignmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignmentType");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.AssignmentType", b =>
                {
                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.ServiceType", "ServiceType")
                        .WithMany()
                        .HasForeignKey("ServiceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceType");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Client", b =>
                {
                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.Address", "AddressNavigation")
                        .WithMany("Client")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.ClientRole", "ClientRoleNavigation")
                        .WithMany()
                        .HasForeignKey("ClientRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.ClientState", "ClientStateNavigation")
                        .WithMany()
                        .HasForeignKey("ClientStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddressNavigation");

                    b.Navigation("ClientRoleNavigation");

                    b.Navigation("ClientStateNavigation");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.ClientPreference", b =>
                {
                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.ClientRegister", b =>
                {
                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.Client", "Client")
                        .WithMany("ClientRegisters")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Document", b =>
                {
                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.Project", "Project")
                        .WithMany("Documents")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Event", b =>
                {
                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.Client", null)
                        .WithMany("Events")
                        .HasForeignKey("ClientId");

                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.User", null)
                        .WithMany("Events")
                        .HasForeignKey("UserId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Hub", b =>
                {
                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.Assignment", null)
                        .WithMany("Commitments")
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Image", b =>
                {
                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.Project", "Project")
                        .WithMany("Images")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Locality", b =>
                {
                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.Province", "IdProvinceNavigation")
                        .WithMany()
                        .HasForeignKey("ProvinceId");

                    b.Navigation("IdProvinceNavigation");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Mail", b =>
                {
                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.Client", "Client")
                        .WithMany("Mails")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.User", "User")
                        .WithMany("Mails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Message", b =>
                {
                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.Client", "Client")
                        .WithMany("Messages")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Notification", b =>
                {
                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.Project", "Project")
                        .WithMany("Notifications")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Project", b =>
                {
                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.Client", "Client")
                        .WithMany("Projects")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.ProjectState", "ProjectStateNavigation")
                        .WithMany()
                        .HasForeignKey("ProjectStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.ProjectType", "ProjectType")
                        .WithMany()
                        .HasForeignKey("ProjectTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.ServiceType", "ServiceType")
                        .WithMany()
                        .HasForeignKey("ServiceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("ProjectStateNavigation");

                    b.Navigation("ProjectType");

                    b.Navigation("ServiceType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Report", b =>
                {
                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.Project", "Project")
                        .WithMany("Reports")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.User", b =>
                {
                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.UserPreference", "Preferences")
                        .WithOne("User")
                        .HasForeignKey("Cervantes.Arquisoft.Domain.Entities.User", "UserPreferenceId");

                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.UserState", "UserState")
                        .WithMany()
                        .HasForeignKey("UserStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Preferences");

                    b.Navigation("UserRole");

                    b.Navigation("UserState");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.UserRegister", b =>
                {
                    b.HasOne("Cervantes.Arquisoft.Domain.Entities.User", "User")
                        .WithMany("UserRegisters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Address", b =>
                {
                    b.Navigation("Client");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Assignment", b =>
                {
                    b.Navigation("Commitments");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Client", b =>
                {
                    b.Navigation("ClientRegisters");

                    b.Navigation("Events");

                    b.Navigation("Mails");

                    b.Navigation("Messages");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Locality", b =>
                {
                    b.Navigation("Address");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.Project", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("Images");

                    b.Navigation("Notifications");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.User", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Mails");

                    b.Navigation("Messages");

                    b.Navigation("Projects");

                    b.Navigation("UserRegisters");
                });

            modelBuilder.Entity("Cervantes.Arquisoft.Domain.Entities.UserPreference", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
